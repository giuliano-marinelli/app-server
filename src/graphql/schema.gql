# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

"""Where input for boolean type"""
input BooleanWhereInput {
  """List of AND conditions"""
  and: [BooleanWhereInput!]

  """Equal to"""
  eq: Boolean

  """Not equal to"""
  ne: Boolean

  """Negated condition"""
  not: BooleanWhereInput

  """List of OR conditions"""
  or: [BooleanWhereInput!]
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

"""Where input for date type"""
input DateTimeWhereInput {
  """List of AND conditions"""
  and: [DateTimeWhereInput!]

  """Equal to anything in the list"""
  any: [DateTime!]

  """Value is between two values"""
  between: [DateTime!]

  """Equal to"""
  eq: DateTime

  """Greater than"""
  gt: DateTime

  """Greater than or equal to"""
  gte: DateTime

  """Equal to anything in the list"""
  in: [DateTime!]

  """Less than"""
  lt: DateTime

  """Less than or equal to"""
  lte: DateTime

  """Not equal to"""
  ne: DateTime

  """Negated condition"""
  not: DateTimeWhereInput

  """List of OR conditions"""
  or: [DateTimeWhereInput!]
}

type Device {
  bot: Boolean
  brand: String
  client: String
  ip: String
  model: String
  os: String
  type: String
}

input DeviceInput {
  bot: Boolean
  brand: String
  client: String
  ip: String
  model: String
  os: String
  type: String
}

""""""
input DeviceOrderInput {
  bot: OrderDirection
  brand: OrderDirection
  client: OrderDirection
  ip: OrderDirection
  model: OrderDirection
  os: OrderDirection
  type: OrderDirection
}

""""""
input DeviceWhereInput {
  bot: BooleanWhereInput
  brand: StringWhereInput
  client: StringWhereInput
  ip: StringWhereInput
  model: StringWhereInput
  os: StringWhereInput
  type: StringWhereInput
}

"""
A field whose value conforms to the standard internet email address format as specified in HTML Spec: https://html.spec.whatwg.org/multipage/input.html#valid-e-mail-address.
"""
scalar EmailAddress @specifiedBy(url: "https://html.spec.whatwg.org/multipage/input.html#valid-e-mail-address")

type Mutation {
  closeSession(id: UUID!): Session
  createUser(userCreateInput: UserCreateInput!): User
  deleteUser(id: UUID!): UUID!
  updatePassword(id: UUID!, password: String!): User
  updateUser(avatarFile: Upload, userUpdateInput: UserUpdateInput!): User
}

"""Defines the order direction."""
enum OrderDirection {
  """Ascending order."""
  ASC

  """Descending order."""
  DESC
}

"""Pagination generic input"""
input PaginationInput {
  """The number of items per page"""
  count: Int!

  """The page number"""
  page: Int!
}

type Profile {
  avatar: String
  bio: String
  location: String
  name: String
  url: URL
}

input ProfileInput {
  avatar: String
  bio: String
  location: String
  name: String
  url: URL
}

""""""
input ProfileOrderInput {
  avatar: OrderDirection
  bio: OrderDirection
  location: OrderDirection
  name: OrderDirection
  url: OrderDirection
}

""""""
input ProfileWhereInput {
  avatar: StringWhereInput
  bio: StringWhereInput
  location: StringWhereInput
  name: StringWhereInput
  url: StringWhereInput
}

type Query {
  """Login with username or email and password. Returns the token string."""
  login(password: String!, usernameOrEmail: String!): String!
  session(id: UUID!): Session
  sessions(order: [SessionOrderInput!], pagination: PaginationInput, where: [SessionWhereInput!]): [Session]!
  user(id: UUID!): User
  users(order: [UserOrderInput!], pagination: PaginationInput, where: [UserWhereInput!]): [User]!
}

"""Defines wich permissions user has."""
enum Role {
  """Admin role can access to all application features."""
  ADMIN

  """User role can access to application basic features."""
  USER
}

type Session {
  blockedAt: DateTime
  closedAt: DateTime
  createdAt: DateTime!
  device: Device
  id: UUID!
  lastActivity: DateTime!
  token: String!
  updatedAt: DateTime!
  user: User
}

""""""
input SessionOrderInput {
  blockedAt: OrderDirection
  closedAt: OrderDirection
  createdAt: OrderDirection
  device: DeviceOrderInput
  lastActivity: OrderDirection
  token: OrderDirection
  updatedAt: OrderDirection
  user: UserOrderInput
}

""""""
input SessionWhereInput {
  blockedAt: DateTimeWhereInput
  closedAt: DateTimeWhereInput
  createdAt: DateTimeWhereInput
  device: DeviceWhereInput
  lastActivity: DateTimeWhereInput
  token: StringWhereInput
  updatedAt: DateTimeWhereInput
  user: UserWhereInput
}

"""Where input for string type"""
input StringWhereInput {
  """List of AND conditions"""
  and: [StringWhereInput!]

  """Equal to anything in the list"""
  any: [String!]

  """Equal to"""
  eq: String

  """Case-sensitive pattern matching expression"""
  ilike: String

  """Equal to anything in the list"""
  in: [String!]

  """Pattern matching expression"""
  like: String

  """Not equal to"""
  ne: String

  """Negated condition"""
  not: StringWhereInput

  """List of OR conditions"""
  or: [StringWhereInput!]
}

"""
A field whose value conforms to the standard URL format as specified in RFC3986: https://www.ietf.org/rfc/rfc3986.txt.
"""
scalar URL

"""
A field whose value is a generic Universally Unique Identifier: https://en.wikipedia.org/wiki/Universally_unique_identifier.
"""
scalar UUID

"""The `Upload` scalar type represents a file upload."""
scalar Upload

type User {
  createdAt: DateTime!
  deletedAt: DateTime
  email: EmailAddress!
  id: UUID!
  lastVerificationTry: DateTime
  password: String!
  profile: Profile
  role: Role
  sessions: [Session!]
  updatedAt: DateTime!
  username: String!
  verificationCode: String
  verified: Boolean
}

input UserCreateInput {
  email: EmailAddress!
  lastVerificationTry: DateTime
  password: String!
  profile: ProfileInput
  role: Role
  username: String!
  verificationCode: String
  verified: Boolean
}

""""""
input UserOrderInput {
  createdAt: OrderDirection
  deletedAt: OrderDirection
  email: OrderDirection
  lastVerificationTry: OrderDirection
  profile: ProfileOrderInput
  role: OrderDirection
  sessions: SessionOrderInput
  updatedAt: OrderDirection
  username: OrderDirection
  verificationCode: OrderDirection
  verified: OrderDirection
}

input UserUpdateInput {
  email: EmailAddress
  id: UUID!
  lastVerificationTry: DateTime
  profile: ProfileInput
  role: Role
  username: String
  verificationCode: String
  verified: Boolean
}

""""""
input UserWhereInput {
  createdAt: DateTimeWhereInput
  deletedAt: DateTimeWhereInput
  email: StringWhereInput
  lastVerificationTry: DateTimeWhereInput
  profile: ProfileWhereInput
  role: StringWhereInput
  sessions: SessionWhereInput
  updatedAt: DateTimeWhereInput
  username: StringWhereInput
  verificationCode: StringWhereInput
  verified: BooleanWhereInput
}