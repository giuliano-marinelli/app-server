# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

input BooleanWhereInput {
  and: [BooleanWhereInput!]
  eq: Boolean
  ne: Boolean
  not: BooleanWhereInput
  or: [BooleanWhereInput!]
}

input CloseSessionInput {
  id: UUID!
  user: UserInput
}

input CreateUserInput {
  email: EmailAddress!
  lastVerificationTry: DateTime
  password: String!
  profile: ProfileInput
  role: Role
  username: String!
  verificationCode: String
  verified: Boolean
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

input DateTimeWhereInput {
  and: [DateTimeWhereInput!]
  any: [DateTime!]
  between: [DateTime!]
  eq: DateTime
  gt: DateTime
  gte: DateTime
  in: [DateTime!]
  lt: DateTime
  lte: DateTime
  ne: DateTime
  not: DateTimeWhereInput
  or: [DateTimeWhereInput!]
}

type Device {
  bot: Boolean
  brand: String
  client: String
  ip: String
  model: String
  os: String
  type: String
}

""""""
input DeviceFilterInput {
  bot: BooleanWhereInput
  brand: StringWhereInput
  client: StringWhereInput
  ip: StringWhereInput
  model: StringWhereInput
  os: StringWhereInput
  type: StringWhereInput
}

input DeviceInput {
  bot: Boolean
  brand: String
  client: String
  ip: String
  model: String
  os: String
  type: String
}

"""
A field whose value conforms to the standard internet email address format as specified in HTML Spec: https://html.spec.whatwg.org/multipage/input.html#valid-e-mail-address.
"""
scalar EmailAddress @specifiedBy(url: "https://html.spec.whatwg.org/multipage/input.html#valid-e-mail-address")

input LoginInput {
  password: String!
  usernameOrEmail: String!
}

type Mutation {
  closeSession(closeSessionInput: CloseSessionInput!): Session
  createUser(createUserInput: CreateUserInput!): User
  deleteUser(id: UUID!): UUID!
  updateUser(updateUserInput: UpdateUserInput!): User
}

"""Defines the order direction."""
enum OrderDirection {
  """Ascending order."""
  ASC

  """Descending order."""
  DESC
}

input PaginationInput {
  count: Int!
  page: Int!
}

type Profile {
  avatar: URL
  bio: String
  location: String
  name: String
  url: String
}

""""""
input ProfileFilterInput {
  avatar: StringWhereInput
  bio: StringWhereInput
  location: StringWhereInput
  name: StringWhereInput
  url: StringWhereInput
}

input ProfileInput {
  avatar: URL
  bio: String
  location: String
  name: String
  url: String
}

type Query {
  """Login with username or email and password. Returns the token string."""
  login(loginInput: LoginInput!): String!
  session(id: UUID!): Session
  sessions(order: [SessionOrderInput!], pagination: PaginationInput, where: [SessionWhereInput!]): [Session]!
  user(id: UUID!): User
  users(order: [UserOrderInput!], pagination: PaginationInput, where: [UserWhereInput!]): [User]!
}

"""Defines wich permissions user has."""
enum Role {
  """Admin role can access to all application features."""
  ADMIN

  """User role can access to application basic features."""
  USER
}

type Session {
  blockedAt: DateTime
  closedAt: DateTime
  createdAt: DateTime!
  device: Device
  id: UUID!
  lastActivity: DateTime!
  token: String!
  updatedAt: DateTime!
  user: User
}

input SessionInput {
  blockedAt: DateTime
  closedAt: DateTime
  createdAt: DateTime!
  device: DeviceInput
  id: UUID!
  lastActivity: DateTime! = "2024-02-10T08:16:25.101Z"
  token: String!
  updatedAt: DateTime!
  user: UserInput
}

""""""
input SessionOrderInput {
  blockedAt: OrderDirection
  closedAt: OrderDirection
  createdAt: OrderDirection
  device: OrderDirection
  lastActivity: OrderDirection
  token: OrderDirection
  updatedAt: OrderDirection
  user: OrderDirection
}

""""""
input SessionWhereInput {
  blockedAt: DateTimeWhereInput
  closedAt: DateTimeWhereInput
  createdAt: DateTimeWhereInput
  device: DeviceFilterInput
  lastActivity: DateTimeWhereInput
  token: StringWhereInput
  updatedAt: DateTimeWhereInput
  user: UserWhereInput
}

input StringWhereInput {
  and: [StringWhereInput!]
  any: [String!]
  eq: String
  ilike: String
  in: [String!]
  like: String
  ne: String
  not: StringWhereInput
  or: [StringWhereInput!]
}

"""
A field whose value conforms to the standard URL format as specified in RFC3986: https://www.ietf.org/rfc/rfc3986.txt.
"""
scalar URL

"""
A field whose value is a generic Universally Unique Identifier: https://en.wikipedia.org/wiki/Universally_unique_identifier.
"""
scalar UUID

input UpdateUserInput {
  email: EmailAddress
  id: UUID!
  lastVerificationTry: DateTime
  password: String
  profile: ProfileInput
  role: Role
  username: String
  verificationCode: String
  verified: Boolean
}

type User {
  createdAt: DateTime!
  deletedAt: DateTime
  email: EmailAddress!
  id: UUID!
  lastVerificationTry: DateTime
  password: String!
  profile: Profile
  role: Role
  sessions: [Session!]
  updatedAt: DateTime!
  username: String!
  verificationCode: String
  verified: Boolean
}

input UserInput {
  createdAt: DateTime!
  deletedAt: DateTime
  email: EmailAddress!
  id: UUID!
  lastVerificationTry: DateTime
  password: String!
  profile: ProfileInput
  role: Role
  sessions: [SessionInput!]
  updatedAt: DateTime!
  username: String!
  verificationCode: String
  verified: Boolean
}

""""""
input UserOrderInput {
  createdAt: OrderDirection
  deletedAt: OrderDirection
  email: OrderDirection
  lastVerificationTry: OrderDirection
  profile: OrderDirection
  role: OrderDirection
  updatedAt: OrderDirection
  username: OrderDirection
  verificationCode: OrderDirection
  verified: OrderDirection
}

""""""
input UserWhereInput {
  createdAt: DateTimeWhereInput
  deletedAt: DateTimeWhereInput
  email: StringWhereInput
  lastVerificationTry: DateTimeWhereInput
  profile: ProfileFilterInput
  role: StringWhereInput
  updatedAt: DateTimeWhereInput
  username: StringWhereInput
  verificationCode: StringWhereInput
  verified: BooleanWhereInput
}